[simulation]
## locus length to simulate
contiglen=1e5
## number of reps under single parameter set
loci=10
## effective population size in present (for scaling) single float or range [1E5,1E6]
effective_population_size=ne.txt
## can be a single float, range [1E-9, 1E-8], or file
recombination_rate=recomb.txt
## can be a float, range [1E-9,1E-8], or file
mutation_rate=2.8e-9

[initialize]
## present Ne0 one for each subpopulation
initial_sizes=80000,120000,11000
## number of haplotypes
sample_sizes=64,72,0
## gene conversion = g_prob,track_len; e.g., g/r=4.9 track_len=518 (comeron et al 2012)
gene_conversion=0,0,0
migration_matrix=

[positive_selection]
## IMPORTANT sweep is only in first pop, index 0, and stops all migration
sweep_population_Ne=
mode=2
## Mode 1: start time and end time, will estimate 2*N*s for successful sojurn, assumes fixation
## Mode 2: start time and 2*N*s, will estimate end time based on sojurn, assumes fixation
## Mode 3: end time and 2*N*s, will estimate start time for stochastic sweep (default of discoal)
## Selection coefficient, alpha=2*Ne*s_b. Single number or use 2 numbers for uniform range
## verify that s_b > 1/Ne. moderate=25,250; strong=250,2500
alpha=25,250
## Start time. Start time of sweep in generations. Use 2 numbers for uniform range.
## verify that sweep_start > 4*Ne*log(alpha)/alpha, else wont fix
sweep_start=5000
## End time. End time of sweep in generations. Use 2 numbers for uniform range. 
sweep_end=0
## Frequency of allele start of sweep. For soft sweep check that: freq > 1/alpha 
allele_freq=0
## Partial sweep. Final frequency at sweep_end is < 1. Allele trajectory will only be correct with mode=3.
partial_sweep=
## Sweep location.
sweep_site=0.5
## Hide sweep in output. 
hide=False
## sweepNe
sweep_effective_size=
## uA 4Ne(uA), uA is the per-base-pair adaptive mutation rate, if len(adapt_rate) >1 will use -PuA [1,2.5]
adapt_mutrate=
## ls time 4Ner, distance of sweep offscreen (left) of the window 
leftRho=
## L 2N*lambda, recurrent hitch-hiking at left of the locus [0,4Ns], lambda = 2E-5
Lrecurrent=
## R 2N*lambda, recurrent hitch-hiking at the locus, may be useful to set x as well or allow Px
Rrecurrent=

#[background_selection]
## everything is in haploid Ne, so multiple by 2
## Nr /Î¼ is not small (>10, say) and Ne s is > 1
#sel_def = "10,20"
#region_def = "[0,1,2,3,4];[5,6,7,8,9]"
#sel_def = "10"
#region_def = "[(0_3_500),(1_3_500)]"
# sel_def = "0"
# region_def = "neutral"
