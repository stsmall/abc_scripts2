[simulation]
contiglen=10000
# number of reps under single parameter set
loci=1
# can be a single float, or range of recomb rates [1E-9,1E-8]
# 1) command line, 2) rho_mu, 3) rate, 4) None will be 0
recombination_rate=
# can be a single float, or range of mut rates [1E-9,1E-8]
mutation_rate=2.8E-9
# must have either mutation rate or effective size. If both will use mutation rate
effective_population_size=

[initialize]
# current Ne from msmc2, or N0 = N1/exp(-growth * time)
initial_sizes=170000,20000,117000,92000,74000,74000
# diploid sample sizes; inds*2
sample_sizes=12,10,20,18,20,0
# alpha = -(1/gens) * log(N1/N0)
growth_rates=0,0,0,0,0,0
# gene conversion = rho_ratio track_len: 4.9 conv/cross (comeron et al 2012) 518bp
gene_conversion=0,0
migration_matrix=

[parameters]
theta_distribution=pi.example.dist.txt
rho_distribution=rho.example.dist.txt

#[selection]
## sweep is only in pop1 and stops all migration
## use -h to hide sweep snp else seg_sites is wrong
#hide=True
## sweepNe
#sweep_effective_size=0
## pop1 Ne, effective popsize of pop1 for alpha
#pop1_effective_size=0
## a (2*Ne*alpha), if len(alpha) > 1 will use -Pa [2Nes]
#sel_coeff=0.009
## f freq, if len(freq) > 1 will use -Pf [0.05,0.20]
## to sim hard sweep, set freq=0
#soft_freq=0
## ws time, if len(time) > 1 will use -Pu [gens]
#sweep_time=0.0004
## x 0.5, if len(site) > 1 will use -Px [0,1]
#sweep_site=0.5
## c, if len(partial_sweep) > 1 will use -Pc [0,1]
#partial_sweep=0
## uA 4Ne(uA), uA is the per-base-pair adaptive mutation rate, if len(adapt_rate) >1 will use -PuA [1,2.5]
#adapt_mutrate=0
## ls time 4Ner, distance of sweep offscreen (left) of the window 
#leftRho=0,0
## L 2N*lambda, recurrent hitch-hiking at left of the locus [0,4Ns], lambda = 2E-5
#Lrecurrent=0
## R 2N*lambda, recurrent hitch-hiking at the locus, may be useful to set x as well or allow Px
#Rrecurrent=0
